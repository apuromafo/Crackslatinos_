PARTE 001  -  CONOCIENDO A OLLYDBG - INSTALACION
PARTE 002  -  SISTEMAS NUMERICOS - NUMEROS POSITIVOS - NEGATIVOS - CARACTERES ASCII - QUE ES EL STACK
PARTE 003  -  REGISTROS Y FLAGS
PARTE 004  -  INSTRUCCIONES DE ASSEMBLER -  NOP, PUSH, POP, PUSHAD, POPAD, MOV, MOVSX, MOVZX, LEA, XCHG, 
PARTE 005  -  INSTRUCCIONES MATEMATICAS - INC, DEC, ADD, ADC, SUB, SBB, MUL, IMUL, DIV, IDIV, XADD, NEG
                         INSTRUCCIONES LOGICAS - AND, XOR, OR, NOT - 
PARTE 006  -  INSTRUCCIONES - COMPARACIONES Y SALTOS CONDICIONALES
PARTE 007  -  INSTRUCCIONES - CALL Y RET
PARTE 008  -  INSTRUCCIONES PARA LOOPS O CICLOS (BUCLES)
PARTE 009  -  PRIMERA APROXIMACION AL CRACKING - CRACKME DE CRUEHEAD
PARTE 010  -  BREAKPOINTS - BP COMUNES, ON MEMORY
PARTE 011  -  BREAKPOINTS - HARDWARE BREAKPOINTS - BP CONDICIONALES
PARTE 012  -  LOS MENSAJES DE WINDOWS - COLOCANDO BP EN LOS MENSAJES DE WINDOWS
PARTE 013  -  PEZCANDO Y REVIRTIENDO SERIALES
PARTE 014  -  PEZCANDO Y REVIRTIENDO SERIALES - HARCODED SERIALS
PARTE 015  -  PEZCANDO Y REVIRTIENDO SERIALES - HARCODED SERIALS
PARTE 016  -  PEZCANDO Y REVIRTIENDO SERIALES - HARCODED SERIALS
PARTE 017  -  PEZCANDO Y REVIRTIENDO SERIALES - HARCODED SERIALS - BUSCANDO EL SERIAL EN LA MEMORIA (CUANDO NO TENEMOS BOTON CHECK)
PARTE 018  -  PEZCANDO Y REVIRTIENDO SERIALES - BUSCANDO EL SERIAL EN LA MEMORIA (CUANDO NO TENEMOS BOTON CHECK)
PARTE 019  -  PROTECCIONES ANTIDEBUGGER - COMO EVITARLAS MANUALMENTE Y CON PLUGINS - api: IsDebuggerPresent - 
PARTE 020  -  PROTECCIONES ANTIDEBUGGER - COMO EVITARLAS MANUALMENTE Y CON PLUGINS - POR NOMBRE DEL PROCESO - api: EnumProcesses
PARTE 021  -  PROTECCIONES ANTIDEBUGGER - COMO EVITARLAS MANUALMENTE Y CON PLUGINS - POR NOMBRE DEL PROCESO - POR NOMBRE O CLASE DE LA VENTANA - api: CreateToolhelp32Snapshot, Process32First, Process32Next, FindWindowA
PARTE 022  -  PROTECCIONES ANTIDEBUGGER - COMO EVITARLAS MANUALMENTE Y CON PLUGINS - apis: UnhandeldExceptionFilter - ZwQueryInformationProcess
PARTE 023  -  PROTECCIONES ANTIDEBUGGER - COMO EVITARLAS MANUALMENTE Y CON PLUGINS - ProcessHeapFlag  y  NTGlobalFlag
PARTE 024  -  PROTECCIONES ANTIDEBUGGER - Resolviendo el Antisocial de la parte 23
PARTE 025  -  EXCEPCIONES
PARTE 026  -  CRACKEANDO VISUAL BASIC - NAGS 

PARTE 027  -  CRACKEANDO VISUAL BASIC - NAGS, METODO DEL 4C
PARTE 028  -  CRACKEANDO VISUAL BASIC - INJERTAR EN DLL (MODIFICARLA)
PARTE 029  -  CRACKEANDO VISUAL BASIC - P-CODE
PARTE 030  -  CRACKEANDO VISUAL BASIC - P-CODE 2DA PARTE
PARTE 031  -  UNPACKING - NICIONES BASICAS
PARTE 032  -  UNPACKING - BUSCAR OPCODES, BUSCADOR DE OEP DE OLLY, METODO PUSHADD, METODO EXCEPCIONES, METODO API MUY USADA,
			METO PRIMERA API EJECUTADA
PARTE 033  -  UNPACKING - QUE ES IAT Y COMO REPARARLA
PARTE 034  -  UNPACKING - CON AYUDA DE PE TOOLS, IMPREC
PARTE 035  -  UNPACKING - CON OLLYDUMP, IMPREC  (EJEMPLO ASPACK)
PARTE 036  -  UNPACKING - CON OLLYDUMP, IMPREC  (OTRO EJERCICIO PRACTICO)
PARTE 037  -  UNPACKING - REPARAR ENTRADAS REDIRECCIONADAS
PARTE 038  -  UNPACKING - REPARAR ENTRADAS REDIRECCIONADAS
PARTE 039  -  STOLEN BYTES Y SCRIPTS
PARTE 040  -  SCRIPTS   (DESEMPACADO DEL PELOCK)
PARTE 041  -  SCRIPTS   (CONT. DESEMPACADO DEL PELOCK)
PARTE 042  -  UNPACKING - STOLEN BYTES (ACPROTECT 1.09)
PARTE 043  -  UNPACKING - REPARAR STOLEN BYTES (ACPROTECT 1.09)
PARTE 044  -  UNPACKING - REPARAR IAT - SCRIPTS (ACPROTECT 1.09)
PARTE 045  -  UNPACKING - REPARAR IAT - DUMPEADO (ACPROTECT 1.09)
PARTE 046  -  UNPACKING - FATMIKE
PARTE 047  -  UNPACKING - FATMIKE (2DA PARTE)
PARTE 048  -  UNPACKING - PESPIN 1.304
PARTE 049  -  UNPACKING - REPARACIÓN DE IAT - PESPIN 1.304 (2DA PARTE)
PARTE 050  -  UNPACKING - OTRO EJEMPLO
PARTE 051  -  UNPACKING - ASPROTECT
PARTE 052  -  UNPACKING - ASPROTECT  (CONTINUACION)
PARTE 053  -  UNPACKING - ASPROTECT  (CONTINUACION)
PARTE 054  -  UNPACKING - EXECRYPTOR 
PARTE 055  -  UNPACKING - EXECRYPTOR (CONTINUACION) - SCRIPT PARA REPARAR IAT

